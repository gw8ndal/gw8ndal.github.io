[{"content":"","date":"9 mars 2023","permalink":"/","section":"Gwendal Troadec - Blog Personnel","summary":"","title":"Gwendal Troadec - Blog Personnel"},{"content":"Matériel et logiciels nécessaires # Ordinateur compatible avec Ubuntu 18.04 (une patate peut suffir) Clé USB de plus de 8Go pour l\u0026rsquo;installation de Linux Procédure d\u0026rsquo;installation # 1 - Installation d\u0026rsquo;Ubuntu 18.04 # Premièrement, nous installons la version d\u0026rsquo;Ubuntu 18.04.5 LTS que nous téléchargeons sur le site officiel Ubuntu.\n2 - Installation de ROS sur Ubuntu # Pour faire cela, nous allons sur la page d\u0026rsquo;installation officielle de Niryo afin d\u0026rsquo;avoir toutes les commandes nécessaires pour l\u0026rsquo;installation.\nVoici les commandes à exéctuer dans l\u0026rsquo;ordre :\n# Mettre à jour le système avant toute installation. sudo apt-get update sudo apt-get upgrade sudo apt-get dist-upgrade # Installation des paquets pré-requis. sudo apt-get install build-essential sqlite3 ffmpeg # Cloner le répertoire du robot depuis Github et entrer dans le dossier git clone https://github.com/NiryoRobotics/ned_ros cd ned_ros # Installation de l\u0026#39;environnement Python pour ROS pip2 install -r requirements_ned2.txt # Mise en place de ROS # à l\u0026#39;aide de la commande suivante, nous devons créer un dossier source mkdir -p ~/catkin_ws_niryo_ned/src # On clone le répertoire dans le dossier qu\u0026#39;on vient de créer cd catkin_ws_niryo_ned git clone https://github.com/NiryoRobotics/ned_ros src 3 - Installation de ROS Melodic # À partir du site officiel de la documentation de ROS, on va installer l\u0026rsquo;environnement de travail ROS\nCommandes à exécuter :\n# Ajouter de dépôt de ROS sudo sh -c \u0026#39;echo \u0026#34;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\u0026#34; \u0026gt; /etc/apt/sources.list.d/ros-latest.list\u0026#39; # Installer curl si il ne l\u0026#39;est pas déjà sudo apt install curl # Ajouter les clés GPG pour les paquets ROS curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add - # On met à jour les dépôts pour ensuite installer les logiciels ROS sudo apt update # Installation complète de ROS incluant les logiciels de simulation sudo apt install ros-melodic-desktop-full 4 - Environnement de travail # Pour utiliser ROS, on doit lancer le fichier /opt/ros/melodic/setup.bash à chaque démarrage. Pour cela, il faut ajouter la commande pour le lancer dans ~/.bashrc avec cette commande :\necho \u0026#34;source /opt/ros/melodic/setup.bash\u0026#34; \u0026gt;\u0026gt; ~/.bashrc 5 - Gestion des paquets ROS # Pour utiliser la commande rosinstall il faut installer quelques paquets préliminaires.\nsudo apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential # Installation de rosdep sudo apt install python-rosdep # Initialisation de rosdep sudo rosdep init # À l\u0026#39;initialisation, il vous sera demandé de mettre à jour rosdep rosdep update # Il faut ensuite installer d\u0026#39;autres paquets avec rosdep rosdep update rosdep install --from-paths src --ignore-src --default-yes --rosdistro melodic --skip-keys \u0026#34;python-rpi.gpio\u0026#34; 6 - Mise en place de l\u0026rsquo;environnement de travail Ned² # Pour simuler le robot Ned², il faut mettre en place un dossier contenant la configuration du robot.\n#Se déplacer dans le dossier catkin cd ~/catkin_ws_niryo_ned # Installer l\u0026#39;environnement de travail catkin catkin_make Il faudra ensuite préparer le terminal à lancer la simulation. Il est conseillé de mettre cette commande dans le fichier ~/.bashrc si vous utilisez ROS sur une machine dédiée.\n# Exécuter une seule fois source devel/setup.bash # Exécution automatique echo \u0026#34;source ~/catkin_ws_niryo_ned/devel/setup.bash\u0026#34; \u0026gt;\u0026gt; ~/.bashrc Lancement de la simulation # On lancera la simulation avec le logiciel Gazebo, car il supporte la physique de l\u0026rsquo;environnement, comme la gravité ou encore le vent.\nDans un terminal il faut lancer le coeur de la simulation avec la commande roscore\nDans un autre terminal il faut lancer la visualisation du Ned² avec cette commande :\nroslaunch niryo_robot_bringup desktop_gazebo_simulation.launch hardware_version:=ned2 L\u0026rsquo;option hardware_version sert à spécifier la version du robot à simuler, comme le Ned, Ned2 et le One.\nProgrammation avec Python # Le module pyniryo sert à programmer le Ned² en Python. On peut l\u0026rsquo;installer avec la commande suivante :\npip3 install pyniryo Remarque : # Si l\u0026rsquo;installation du module ne fonctionne pas, essayez de mettre à jour pip avec cette commande :\npip3 install --upgrade pip Conclusion # Si tout c\u0026rsquo;est bien passé, la simulation fonctionne et on peut contrôler le robot avec Niryo Studio en le connectant avec l\u0026rsquo;IP 127.0.0.1\n","date":"9 mars 2023","permalink":"/posts/ros/","section":"Posts","summary":"Matériel et logiciels nécessaires # Ordinateur compatible avec Ubuntu 18.","title":"Installation de ROS pour le Niryo Ned²"},{"content":"","date":"9 mars 2023","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"Repository sur Github # Description brève # Ce projet à été réalisé en cours de NSI, et à pour but d\u0026rsquo;aider les élèves de NSI à se faire un café ou thé sans même devoir se lever, pour un confort maximal.\nInstallation # Cloner le dépôt sur le Raspberry Pi git clone https://github.com/gw8ndal/autokettle Se déplacer dans le dossier cloné cd autokettle Suivre les instructions dans votre langue préférée dans le dossier \u0026ldquo;Instructions\u0026rdquo; ","date":"3 juin 2022","permalink":"/posts/autokettle/","section":"Posts","summary":"Repository sur Github # Description brève # Ce projet à été réalisé en cours de NSI, et à pour but d\u0026rsquo;aider les élèves de NSI à se faire un café ou thé sans même devoir se lever, pour un confort maximal.","title":"Autokettle"},{"content":"Repository sur Github # Description brève # J\u0026rsquo;ai créé ce script pour l\u0026rsquo;utiliser sur mon ordinateur au lancement d\u0026rsquo;un terminal pour rapidement afficher des informations sur mon système.\nInstallation # Cloner le repository git clone https://github.com/gw8ndal/archinfo Se déplacer dans le dossier cloné cd archinfo Installer le script bash install.sh Lancer le script archinfo Désinstallation # Lancer le script de suppression bash remove.sh ","date":"5 mars 2022","permalink":"/posts/archinfo/","section":"Posts","summary":"Repository sur Github # Description brève # J\u0026rsquo;ai créé ce script pour l\u0026rsquo;utiliser sur mon ordinateur au lancement d\u0026rsquo;un terminal pour rapidement afficher des informations sur mon système.","title":"Archinfo"},{"content":"Repository sur Gitlab # Description brève # Je gère mes fichiers de configuration grâce à Gitlab, cela me permet de déployer les paramètres sur un nouvel appareil très rapidement, pour pouvoir me mettre au travail plus vite. Ces fichiers de configuration sont souvent changés car je rajoute ou modifie des fonctionnalités et thèmes régulièrement.\nLogiciels concernés # Vim Micro Starship Zsh Conky Rofi GNOME Utilisation # Clonez le dépot Gitlab git clone https://gitlab.com/gw8ndal/dotfiles.git Entrez dans le dossier cloné cd dotfiles/ Appliquez les paramètres ./apply-dotfiles Profitez ! ","date":"19 février 2022","permalink":"/posts/dotfiles/","section":"Posts","summary":"Repository sur Gitlab # Description brève # Je gère mes fichiers de configuration grâce à Gitlab, cela me permet de déployer les paramètres sur un nouvel appareil très rapidement, pour pouvoir me mettre au travail plus vite.","title":"Dotfiles"},{"content":"Moi # Je m\u0026rsquo;appelle Gwendal Troadec, je suis actuellement étudiant en BTS Systèmes Numériques, avec l\u0026rsquo;option Informatique et Réseaux au Lycée La Croix Rouge LaSalle à Brest. J\u0026rsquo;aime coder des logiciels qui me servent au quotidien et qui me permettent de m\u0026rsquo;améliorer.\nCompétences # Programmation # Python C++ Javascript HTML CSS SQL Réseaux # Commandes Cisco Windows Server 2022 Linux (Arch \u0026amp; Debian) Autres compétences # Montage et réparation PC Raspberry Pi Matériel # Ordinateur # Caractéristiques # Ryzen 5 2600 Strix RX 5600XT 16Go Corsair Vengeance RGB PRO Périphériques # Razer Viper Ultimate Drevo Seer Pro Logitech Z200 LG UltraGear 24GN600 Asus VA24EHE Logiciels # Système d\u0026rsquo;exploitation : Arch Linux Editeur de texte : Vim / VS Code Navigateur Web : Mozilla Firefox ","date":"13 février 2022","permalink":"/about/","section":"Gwendal Troadec - Blog Personnel","summary":"Moi # Je m\u0026rsquo;appelle Gwendal Troadec, je suis actuellement étudiant en BTS Systèmes Numériques, avec l\u0026rsquo;option Informatique et Réseaux au Lycée La Croix Rouge LaSalle à Brest.","title":"A Propos"},{"content":"Personnel # Dotfiles (Fichiers de configurations et thèmes)\nArchinfo (Script d\u0026rsquo;information système)\nScolaire # Autokettle (Bouilloire automatisée)\nInstallation de ROS pour le Niryo Ned²\n","date":"13 février 2022","permalink":"/projets/","section":"Gwendal Troadec - Blog Personnel","summary":"Personnel # Dotfiles (Fichiers de configurations et thèmes)","title":"Projets"},{"content":"","date":"1 janvier 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 janvier 0001","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"}]